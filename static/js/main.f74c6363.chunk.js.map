{"version":3,"sources":["Components/Header/Header.module.css","Components/Superhero/Superhero.module.css","axios.js","Components/Hero/Hero.js","Components/Superhero/Superhero.js","Components/Header/Header.js","App.js","serviceWorker.js","index.js","Components/Hero/Hero.module.css"],"names":["module","exports","Header","SearchBar","Input","Button","Background","instance","axios","create","baseURL","defaults","headers","common","hero","props","react_default","a","createElement","className","classes","Hero","Card","Image","src","data","image","url","alt","name","id","biography","alignment","powerstats","power","intelligence","speed","combat","strength","durability","Superhero","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getresult","get","concat","state","query","then","response","error","setState","loading","heroes","results","catch","console","log","inputHandler","event","target","value","getDateTime","today","Date","getDate","slice","getMonth","getUTCFullYear","getHours","getMinutes","dateKeeper","searchedItems","searched","dt","post","submitHandler","length","keyPressHandler","key","style","color","type","placeholder","onKeyPress","onChange","onClick","map","Component","App","Components_Header_Header","Components_Superhero_Superhero","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,OAAA,+ECAlBF,EAAAC,QAAA,CAAkBE,UAAA,6BAAAC,MAAA,yBAAAC,OAAA,0BAAAC,WAAA,iNCCZC,SAAWC,EAAMC,OAAO,CAC1BC,QAAS,6FAGbH,EAASI,SAASC,QAAQC,OAA1B,cAAoD,2BAIrCN,wBCYAO,EAnBF,SAAEC,GAAF,OACTC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQC,MACpBL,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAQE,MACxBN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQG,MAAOC,IAAKT,EAAMU,KAAKC,MAAMC,IAAKC,IAAKb,EAAMc,OACrEb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,iBAAYH,EAAMU,KAAKK,IAC1Bd,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mBAAcH,EAAMU,KAAKI,MAC5Bb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAkBH,EAAMU,KAAKM,UAAU,cAC1Cf,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wBAAmBH,EAAMU,KAAKM,UAAUC,WAC3ChB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,oBAAeH,EAAMU,KAAKQ,WAAWC,OACxClB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAAsBH,EAAMU,KAAKQ,WAAWE,cAC/CnB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,oBAAeH,EAAMU,KAAKQ,WAAWG,OACxCpB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,qBAAgBH,EAAMU,KAAKQ,WAAWI,QACzCrB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAkBH,EAAMU,KAAKQ,WAAWK,UAC3CtB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAoBH,EAAMU,KAAKQ,WAAWM,+BCgF1CC,cAzFX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAQJI,UAAY,WACRxC,EAAMyC,IAAN,IAAAC,OAAcT,EAAKU,MAAMC,QACpBC,KAAK,SAAAC,GACEA,EAAS7B,KAAK8B,MACdd,EAAKe,SAAS,CAAED,MAAOD,EAAS7B,KAAK8B,MAAME,SAAQ,IAGnDhB,EAAKe,SAAS,CAAEE,OAAQJ,EAAS7B,KAAKkC,QAAQJ,MAAO,KAAKE,SAAQ,MAGzEG,MAAM,SAAAL,GACHM,QAAQC,IAAIP,MApBXd,EA4BbsB,aAAe,SAACC,GACZvB,EAAKe,SAAS,CAAEJ,MAAOY,EAAMC,OAAOC,OAAS,eA7BpCzB,EAgCb0B,YAAY,WACR,IAAMC,EAAQ,IAAIC,KAGlB,OAFW,IAAID,EAAME,WAAWC,OAAO,GAAG,KAAK,IAAKH,EAAMI,YAAYD,OAAO,GAAG,IAAIH,EAAMK,iBACtF,KAAK,IAAIL,EAAMM,YAAYH,OAAO,GAAG,KAAK,IAAIH,EAAMO,cAAcJ,OAAO,IAnCpE9B,EAuCbmC,WAAW,WACP,IAAMC,EAAgB,CAClBC,SAAWrC,EAAKU,MAAMC,MACtB2B,GAAItC,EAAK0B,eAEb3D,EAAMwE,KAAK,gEAAgEH,GAC1ExB,KAAK,SAAAC,GAAQ,OAAIO,QAAQC,IAAIR,KAC7BM,MAAM,SAAAL,GAAK,OAAIM,QAAQC,IAAIP,MA9CnBd,EAiDbwC,cAAgB,WACZxC,EAAKO,YACLa,QAAQC,IAAIrB,EAAKU,MAAMO,OAAOwB,QAC9BzC,EAAKe,SAAS,CAACC,SAAQ,IACvBhB,EAAKmC,cArDInC,EAwDb0C,gBAAgB,SAACnB,GACE,UAAZA,EAAMoB,MACL3C,EAAKO,YACTP,EAAKe,SAAS,CAACC,SAAQ,IACvBhB,EAAKmC,eA1DLnC,EAAKU,MAAQ,CACTO,OAAQ,GACRN,MAAO,GACPG,MAAO,KACPE,SAAU,GANLhB,mFAyBTG,KAAKuB,+CAwCL,OAAGvB,KAAKO,MAAMM,QACHzC,EAAAC,EAAAC,cAAA,MAAImE,MAAO,CAACC,MAAM,YAAlB,cAIPtE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQd,YACpBU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQjB,WACpBa,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQhB,MAAOmF,KAAK,OAAOC,YAAY,6BAA8BC,WAAY7C,KAAKuC,gBAAiBjB,MAAOtB,KAAKO,MAAMC,MAAOsC,SAAU9C,KAAKmB,eACjK/C,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQf,OAAQsF,QAAS/C,KAAKqC,cAAeM,KAAK,UAArE,WAEJvE,EAAAC,EAAAC,cAAA,WACK0B,KAAKO,MAAMI,MAAQvC,EAAAC,EAAAC,cAAA,MAAImE,MAAO,CAACC,MAAM,YAAa1C,KAAKO,MAAMI,OAAcX,KAAKO,MAAMO,OAAOkC,IAAI,SAAA9E,GAC9F,OAAOE,EAAAC,EAAAC,cAACG,EAAD,CACHI,KAAMX,EACNsE,IAAKtE,EAAKgB,gBAhFd+D,8BCCT3F,EAJD,kBACVc,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQlB,QAAxB,uBCYW4F,mLATX,OACE9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAC8E,EAAD,cALUH,aCOEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxD,KAAK,SAAAyD,GACjCA,EAAaC,kCElInB/G,EAAAC,QAAA,CAAkBoB,KAAA,mBAAAE,MAAA","file":"static/js/main.f74c6363.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1nUUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"Superhero_SearchBar__3g83F\",\"Input\":\"Superhero_Input__2AuTn\",\"Button\":\"Superhero_Button__1q8oj\",\"Background\":\"Superhero_Background__1nv0D\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cors-anywhere.herokuapp.com/https://superheroapi.com/api/2201567809937229/search'\r\n});\r\n\r\ninstance.defaults.headers.common['Authorization'] = 'AUTH TOKEN FROM INSTANCE';\r\n\r\n//instance.interceptors.request...\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Hero.module.css';\r\n\r\nconst hero = ( props ) => (\r\n    <div className={classes.Hero}>\r\n        <article className={classes.Card}>\r\n            <img className={classes.Image} src={props.data.image.url} alt={props.name} />\r\n            <p><b>ID- </b>{props.data.id}</p> \r\n            <p><b>NAME- </b>{props.data.name}</p>\r\n            <p><b>REALNAME- </b>{props.data.biography[\"full-name\"]}</p>  \r\n            <p><b>CHARACTER- </b>{props.data.biography.alignment}</p>\r\n            <p><b>POWER- </b>{props.data.powerstats.power}</p> \r\n            <p><b>INTELLIGENCE- </b>{props.data.powerstats.intelligence}</p>\r\n            <p><b>SPEED- </b>{props.data.powerstats.speed}</p>\r\n            <p><b>COMBAT- </b>{props.data.powerstats.combat}</p>\r\n            <p><b>STRENGTH- </b>{props.data.powerstats.strength}</p>\r\n            <p><b>DURABILITY- </b>{props.data.powerstats.durability}</p> \r\n\r\n        </article>\r\n    </div>\r\n);\r\n\r\nexport default hero;","import React, { Component } from 'react';\r\nimport axios from '../../axios';\r\nimport Hero from '../Hero/Hero';\r\nimport classes from './Superhero.module.css';\r\n\r\n\r\nclass Superhero extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            heroes: [],\r\n            query: '',\r\n            error: null,\r\n            loading : false\r\n    }\r\n    }\r\n    getresult = () => {\r\n        axios.get(`/${this.state.query}`)\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    this.setState({ error: response.data.error,loading:false});\r\n                }\r\n                else {\r\n                    this.setState({ heroes: response.data.results,error: null,loading:false });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDateTime();\r\n    }\r\n\r\n    inputHandler = (event) => {\r\n        this.setState({ query: event.target.value }, () => {\r\n        })\r\n    }\r\n    getDateTime=()=>{\r\n        const today = new Date();\r\n        const dt= (\"0\"+today.getDate()).slice(-2)+\"/\"+(\"0\" +today.getMonth()).slice(-2)+\"/\"+today.getUTCFullYear()+\r\n            \" \"+(\"0\"+today.getHours()).slice(-2)+\":\"+(\"0\"+today.getMinutes()).slice(-2);\r\n        return dt;\r\n    }\r\n    \r\n    dateKeeper=()=>{\r\n        const searchedItems = {\r\n            searched : this.state.query,\r\n            dt: this.getDateTime()\r\n        }\r\n        axios.post('https://dc-marvel-universe.firebaseio.com/searched-items.json',searchedItems)\r\n        .then(response => console.log(response))\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    submitHandler = () => {\r\n        this.getresult();\r\n        console.log(this.state.heroes.length)\r\n        this.setState({loading:true})\r\n        this.dateKeeper();\r\n    }\r\n\r\n    keyPressHandler=(event)=>{\r\n        if(event.key===\"Enter\"){\r\n            this.getresult();\r\n        this.setState({loading:true})\r\n        this.dateKeeper();\r\n    }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loading){\r\n            return(<h2 style={{color:'#5e0e0e'}}>Loading...</h2>)\r\n        }\r\n        else{\r\n        return (\r\n            <div className={classes.Background}>\r\n                <div className={classes.SearchBar}>\r\n                    <input className={classes.Input} type='text' placeholder='Search Heroes and Villains'  onKeyPress={this.keyPressHandler} value={this.state.query} onChange={this.inputHandler} />\r\n                    <button className={classes.Button} onClick={this.submitHandler} type=\"submit\">Search</button>\r\n                </div>\r\n                <div>\r\n                    {this.state.error ? <h2 style={{color:'#5e0e0e'}}>{this.state.error}</h2> : this.state.heroes.map(hero => {\r\n                        return <Hero\r\n                            data={hero}\r\n                            key={hero.id}\r\n                        />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n}\r\n\r\nexport default Superhero;","import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header =() => (\r\n    <div className={classes.Header}>DC MARVEL UNIVERSE</div>\r\n)\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\nimport Superhero from './Components/Superhero/Superhero';\nimport Header from './Components/Header/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header />\n        <Superhero />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hero\":\"Hero_Hero__2pt_Z\",\"Image\":\"Hero_Image__2Ihnn\"};"],"sourceRoot":""}